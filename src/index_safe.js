import { getLatestRow, getSheetHeaders } from './googleSheets.js';
import { loadChatIds, saveChatIds, createBot } from './telegramBot.js';
import { sendMessageToDiscord } from './discordWebhook.js';
import { logInfo, logError } from './logger.js';
import dotenv from 'dotenv';
dotenv.config();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function validateConfig() {
  const requiredVars = ['SHEET_ID', 'TELEGRAM_TOKEN', 'DISCORD_WEBHOOK'];
  const missing = requiredVars.filter(key => !process.env[key] || process.env[key].includes('–≤–∞—à_'));
  
  if (missing.length > 0) {
    logError(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${missing.join(', ')}`);
    logInfo('üí° –ó–∞–ø—É—Å–∫ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ...');
    return false;
  }
  return true;
}

// –î–µ–º–æ-—Ä–µ–∂–∏–º (—Å–∏–º—É–ª—è—Ü–∏—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö API)
function runDemoMode() {
  logInfo('üé≠ –î–ï–ú–û-–†–ï–ñ–ò–ú: –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞');
  
  // –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
  const demoData = ['–¢–µ—Å—Ç–æ–≤–æ–µ –∏–º—è', 'test@example.com', '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'];
  logInfo('üìä –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets:');
  console.log('   ', demoData);
  
  // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
  logInfo('üì± –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:');
  console.log('    –ù–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –ø–æ—Å—Ç—É–ø–∏–ª–∞!');
  console.log('    **–ü–æ–ª–µ 1:** –¢–µ—Å—Ç–æ–≤–æ–µ –∏–º—è');
  console.log('    **–ü–æ–ª–µ 2:** test@example.com');
  console.log('    **–ü–æ–ª–µ 3:** –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
  
  // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord
  logInfo('üí¨ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord:');
  console.log('    Embed —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã');
  
  logInfo('‚úÖ –î–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  logInfo('üöÄ –ó–∞–ø—É—Å–∫ GSTelegramDiscord –±–æ—Ç–∞...');
  
  if (!validateConfig()) {
    runDemoMode();
    return;
  }
  
  // –†–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
  try {
    const sheetId = process.env.SHEET_ID;
    const botToken = process.env.TELEGRAM_TOKEN;
    const discordWebhookUrl = process.env.DISCORD_WEBHOOK;
    
    const bot = createBot(botToken);
    let userChatIds = loadChatIds();
    const formStore = [];
    let previousData = [];
    
    // –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    bot.onText(/\/start/, (msg) => {
      const chatId = msg.chat.id;
      userChatIds.add(chatId);
      saveChatIds(userChatIds);
      bot.sendMessage(chatId, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!');
      logInfo(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${chatId} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.`);
    });
    
    bot.onText(/\/test/, (msg) => {
      const chatId = msg.chat.id;
      bot.sendMessage(chatId, '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!');
      logInfo(`–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
    });
    
    bot.onText(/\/status/, (msg) => {
      const chatId = msg.chat.id;
      bot.sendMessage(chatId, `‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!\nüìä –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userChatIds.size}`);
      logInfo(`–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}`);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query
    bot.on('callback_query', async (callbackQuery) => {
      const chatId = callbackQuery.message.chat.id;
      const action = callbackQuery.data;
      
      if (action.startsWith('confirm_')) {
        const formDataIndex = parseInt(action.replace('confirm_', ''), 10);
        const formData = formStore[formDataIndex];
        await sendMessageToDiscord(formData, sheetId, discordWebhookUrl);
        bot.sendMessage(chatId, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Discord.');
        logInfo(`–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Discord –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${chatId}`);
      } else if (action === 'decline') {
        bot.sendMessage(chatId, '–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ.');
        logInfo(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${chatId} –æ—Ç–∫–ª–æ–Ω–∏–ª –¥–∞–Ω–Ω—ã–µ.`);
      }
      
      bot.deleteMessage(chatId, callbackQuery.message.message_id).catch((error) => 
        logError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`)
      );
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets
    logInfo('üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets...');
    previousData = await getLatestRow(sheetId);
    logInfo('‚úÖ Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω—ã');
    
    // –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    const interval = process.env.CHECK_INTERVAL || 10000;
    logInfo(`üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ ${interval}–º—Å`);
    
    setInterval(async () => {
      try {
        const updates = await getLatestRow(sheetId);
        if (updates && JSON.stringify(updates) !== JSON.stringify(previousData)) {
          previousData = updates;
          logInfo('üì¨ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...');
          // –ó–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        }
      } catch (error) {
        logError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${error.message}`);
      }
    }, parseInt(interval));
    
  } catch (error) {
    logError(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    logInfo('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ .env –∏ conf/discordbot.json');
  }
}

main().catch(error => {
  logError(`–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
  process.exit(1);
});
