import { google } from 'googleapis';
import { GoogleAuth } from 'google-auth-library';
import TelegramBot from 'node-telegram-bot-api';
import fetch from 'node-fetch';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Определение __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Настройки для Google Sheets API
const SCOPES = ['https://www.googleapis.com/auth/spreadsheets.readonly'];
const credentialsPath = path.join(__dirname, 'discordbot-437914-409ab6e0cef6.json');
const auth = new GoogleAuth({
  keyFile: credentialsPath,
  scopes: SCOPES,
});
const sheets = google.sheets({ version: 'v4', auth });

// Получаем лист Google Sheets
const sheetId = '1uzFT3J3QbluLhM2SsB6TqBghPV2J4ftkcOSNFpzUc7c'; // Замените на свой ID Google Sheets

// Настройки Telegram
const botToken = '7678987754:AAE3v8GmtwD8KPzLiPO1itoqnnoNBmFXDCc';
const bot = new TelegramBot(botToken, { polling: true });

// URL вебхука Discord
const discordWebhookUrl = 'https://discord.com/api/webhooks/1292903156556103763/QEiWjpa8pb-S9Sy_HoqpPTubsf3ys5iiELqT0b4QO2LfwQFQ7msA3-CoE9Ht1IjwZ1w-';

// Хранение chat ID пользователей
let userChatIds = new Set();

// Загрузка chat ID из файла
function loadChatIds() {
  try {
    const data = fs.readFileSync('chat_ids.json', 'utf-8');
    userChatIds = new Set(JSON.parse(data));
    console.log('Загружены chat IDs:', userChatIds);
  } catch (error) {
    console.log('Не удалось загрузить chat IDs:', error);
  }
}

// Сохранение chat ID в файл
function saveChatIds() {
  fs.writeFileSync('chat_ids.json', JSON.stringify([...userChatIds]));
  console.log('Chat IDs сохранены:', userChatIds);
}

// Команда /start для регистрации пользователей
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  userChatIds.add(chatId);
  saveChatIds();
  bot.sendMessage(chatId, 'Вы успешно зарегистрированы для получения обновлений!');
  console.log(`Пользователь ${chatId} зарегистрирован.`);
});

// Команда для тестирования отправки сообщения
bot.onText(/\/test/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, 'Это тестовое сообщение!')
    .then(() => console.log(`Тестовое сообщение отправлено пользователю ${chatId}`))
    .catch((error) => console.log('Ошибка при отправке тестового сообщения:', error));
});

// Проверка обновлений в Google Sheets
let previousData = [];

async function checkForUpdates() {
  try {
    const response = await sheets.spreadsheets.values.get({
      spreadsheetId: sheetId,
      range: 'Sheet1!A1:Z1000', // Укажите диапазон ваших данных
    });
    const currentData = response.data.values || [];

    if (JSON.stringify(currentData) !== JSON.stringify(previousData)) {
      console.log('Обнаружены обновления в Google Sheets!');
      previousData = currentData;
      return currentData;
    } else {
      console.log('Нет новых данных.');
      return null;
    }
  } catch (error) {
    console.error('Ошибка при получении данных из Google Sheets:', error);
    return null;
  }
}

// Отправка сообщения в Discord
async function sendMessageToDiscord(formData) {
  try {
    const payload = {
      content: `Новая форма: ${JSON.stringify(formData)}`,
    };
    const response = await fetch(discordWebhookUrl, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });
    if (response.status === 204) {
      console.log('Сообщение успешно отправлено в Discord.');
    } else {
      console.log(`Ошибка при отправке в Discord: ${response.status}`);
    }
  } catch (error) {
    console.error('Ошибка при отправке в Discord:', error);
  }
}

// Отправка обновлений в Telegram
async function handleTelegramUpdates(data) {
  const message = `Новая форма поступила! Пожалуйста, подтвердите или отклоните. Данные: ${JSON.stringify(data)}`;

  for (const chatId of userChatIds) {
    bot.sendMessage(chatId, message)
      .then(() => console.log(`Сообщение отправлено пользователю ${chatId}`))
      .catch((error) => console.log(`Ошибка при отправке сообщения пользователю ${chatId}:`, error));
  }
}

// Основной цикл проверки Google Sheets
async function main() {
  loadChatIds();
  previousData = await checkForUpdates();

  setInterval(async () => {
    const updates = await checkForUpdates();
    if (updates) {
      await handleTelegramUpdates(updates);
      await sendMessageToDiscord(updates);
    }
  }, 10000); // Проверка каждые 10 секунд
}

main();