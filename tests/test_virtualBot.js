// –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ª–æ–≥–∏–∫–∏ Telegram-–±–æ—Ç–∞ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
// import { createBot } from '../src/telegramBot.js';

class VirtualBot {
  constructor() {
    this.messages = [];
    this.handlers = {};
  }
  onText(regex, handler) {
    this.handlers[regex.source] = handler;
  }
  sendMessage(chatId, text) {
    this.messages.push({ chatId, text });
    return Promise.resolve();
  }
  simulateMessage(text, chatId = 1) {
    for (const key in this.handlers) {
      const regex = new RegExp(key);
      if (regex.test(text)) {
        this.handlers[key]({ chat: { id: chatId } }, text.match(regex));
      }
    }
  }
}

console.log('=== –¢–µ—Å—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ Telegram –±–æ—Ç–∞ ===');

// –¢–µ—Å—Ç: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const bot = new VirtualBot();
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!');
});

bot.simulateMessage('/start');

console.log('üì± –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ /start –∫–æ–º–∞–Ω–¥—ã:');
console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', bot.messages);

// –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /test
bot.onText(/\/test/, (msg) => {
  bot.sendMessage(msg.chat.id, '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!');
});

bot.simulateMessage('/test');
console.log('üì± –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ /test –∫–æ–º–∞–Ω–¥—ã:');
console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', bot.messages);

console.log('‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
// –û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥: [{ chatId: 1, text: '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!' }]
